# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # ------------- Tests ----------------
      
      - name: test and16
        run: |
          pytest hw/test_components.py -k and16
          
      - name: test mux2way
        run: |
          pytest hw/test_components.py -k test_mux2way
      - name: test mux4way
        run: |
          pytest hw/test_components.py -k test_mux4way
      - name: test mux8way
        run: |
          pytest hw/test_components.py -k test_mux8way
      - name: test barrelShifter
        run: |
          pytest hw/test_components.py -k barrelShifter
      
      - name: test or8way
        run: |
          pytest hw/test_components.py -k or8way
        
      - name: test deMux4way
        run: |
          pytest hw/test_components.py -k deMux4way
      
      - name: test orNway
        run: |
          pytest hw/test_components.py -k orNway
      
      - name: test deMux2way
        run: |
          pytest hw/test_components.py -k deMux2way
          
      - name: test deMux8way
        run: |
          pytest hw/test_components.py -k test_deMux8way
      
      - name: test bin2bcd
        run: |
          pytest hw/test_components.py -k test_bin2bcd
      


      # ----- ULA ------

      - name: test comparador
        run: |
          pytest hw/test_ula.py -k test_comparador
      
      - name: test inversor
        run: |
          pytest hw/test_ula.py -k test_inversor
      - name: test zerador
        run: |
          pytest hw/test_ula.py -k test_zerador
      
      - name: test add
        run: |
          pytest hw/test_ula.py -k test_add
      
      - name: test inc
        run: |
          pytest hw/test_ula.py -k test_inc
      
      - name: teste ula
        run: |
          pytest hw/test_ula.py -k test_ula
      
      # ------ SEQ -------
      - name: teste dff
        run: |
          pytest hw/test_seq.py -k test_dff
      
      - name: teste binaryDigit
        run: |
          pytest hw/test_seq.py -k test_binaryDigit
      
      - name: teste register8
        run: |
          pytest hw/test_seq.py -k test_register8
      
      - name: teste registerN
        run: |
          pytest hw/test_seq.py -k test_registerN
      
      - name: teste pc
        run: |
          pytest hw/test_seq.py -k test_pc
      
      - name: teste ram
        run: |
          pytest hw/test_seq.py -k test_ram
      # ------ ASSEMBLY -------

      # ------ ASSEMBLER -------

      - name: teste advanced
        run: |
          pytest sw/assembler/test_asmparser.py -k test_advanced
      - name: teste label
        run : |
          pytest sw/assembler/test_asmparser.py -k test_labol
      - name: teste symbol
        run : |
          pytest sw/assembler/test_asmparser.py -k test_symbol
      
      - name: teste CommandType
        run : |
          pytest sw/assembler/test_asmparser.py -k test_commandType
      - name: teste dest
        run : |
          pytest sw/assembler/test_asmcode.py -k test_dest
      - name: teste comp
        run : |
          pytest sw/assembler/test_asmcode.py -k test_comp
        
      - name: teste jump
        run : |
          pytest sw/assembler/test_asmcode.py -k test_jump
      - name: teste toBinary
        run : |
          pytest sw/assembler/test_asmcode.py -k test_toBinary



